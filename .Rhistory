select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020,
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
library(leaflet)
library(tidyverse)
library(shiny)
library(leaflet)
library(maptools)
library(sp)
library(DT)
stations_trips_2020 <- read_csv("stations_trips_2020.csv")
stations_trips_2019 <- read_csv("stations_trips_2019.csv")
stations_lat_long <- read.csv('stations_lat_long.csv')
matrix_2019 = read.csv("trip.mat.2019.csv")
matrix_2020 = read.csv("trip.mat.2020.csv")
table_matrix_and_names_2019 = cbind(matrix_2019[,-1], stations_lat_long)
table_matrix_and_names_2020 = cbind(matrix_2020[,-1], stations_lat_long)
base_map <- function(year=2019){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
return(map)
}
map <- function(year=2019, selected_station){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
# Subsetting data for selected_station
data_subset <- data[which(data$start.station.name==selected_station),]
# Adding lines between selected_station and other stations
for(i in 1:nrow(data_subset)){
map = map %>%
addPolylines(data = data_subset[i,],
lat= ~ c(lat.ss, lat.es),
lng= ~ c(long.ss, long.es),
color = 'purple',
weight = ~ n.trips.ss.es/300)
}
return(map)
}
initial_table <- function(){
tab <- data.frame("Stations"=stations_lat_long$start.station.name,
"Total Trips 2019" = stations_trips_2019$n.trips[1:50],
"Total Trips 2020" = stations_trips_2020$n.trips[1:50],
check.names = FALSE)
return(tab)
}
trip_table <- function(selected_station=selected_station){
trips_2019 <- table_matrix_and_names_2019 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020, "Percentage Change" = paste0(((trips_2020 - trips_2019) / trips_2019) * 100, "%"),
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
library(leaflet)
library(tidyverse)
library(shiny)
library(leaflet)
library(maptools)
library(sp)
library(DT)
stations_trips_2020 <- read_csv("stations_trips_2020.csv")
stations_trips_2019 <- read_csv("stations_trips_2019.csv")
stations_lat_long <- read.csv('stations_lat_long.csv')
matrix_2019 = read.csv("trip.mat.2019.csv")
matrix_2020 = read.csv("trip.mat.2020.csv")
table_matrix_and_names_2019 = cbind(matrix_2019[,-1], stations_lat_long)
table_matrix_and_names_2020 = cbind(matrix_2020[,-1], stations_lat_long)
base_map <- function(year=2019){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
return(map)
}
map <- function(year=2019, selected_station){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
# Subsetting data for selected_station
data_subset <- data[which(data$start.station.name==selected_station),]
# Adding lines between selected_station and other stations
for(i in 1:nrow(data_subset)){
map = map %>%
addPolylines(data = data_subset[i,],
lat= ~ c(lat.ss, lat.es),
lng= ~ c(long.ss, long.es),
color = 'purple',
weight = ~ n.trips.ss.es/300)
}
return(map)
}
initial_table <- function(){
tab <- data.frame("Stations"=stations_lat_long$start.station.name,
"Total Trips 2019" = stations_trips_2019$n.trips[1:50],
"Total Trips 2020" = stations_trips_2020$n.trips[1:50],
check.names = FALSE)
return(tab)
}
trip_table <- function(selected_station=selected_station){
trips_2019 <- table_matrix_and_names_2019 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020, "Percentage Change" = paste0(((trips_2020 - trips_2019) / trips_2019) * 100, "%"),
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
library(leaflet)
library(tidyverse)
library(shiny)
library(leaflet)
library(maptools)
library(sp)
library(DT)
stations_trips_2020 <- read_csv("stations_trips_2020.csv")
stations_trips_2019 <- read_csv("stations_trips_2019.csv")
stations_lat_long <- read.csv('stations_lat_long.csv')
matrix_2019 = read.csv("trip.mat.2019.csv")
matrix_2020 = read.csv("trip.mat.2020.csv")
table_matrix_and_names_2019 = cbind(matrix_2019[,-1], stations_lat_long)
table_matrix_and_names_2020 = cbind(matrix_2020[,-1], stations_lat_long)
base_map <- function(year=2019){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
return(map)
}
map <- function(year=2019, selected_station){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
# Subsetting data for selected_station
data_subset <- data[which(data$start.station.name==selected_station),]
# Adding lines between selected_station and other stations
for(i in 1:nrow(data_subset)){
map = map %>%
addPolylines(data = data_subset[i,],
lat= ~ c(lat.ss, lat.es),
lng= ~ c(long.ss, long.es),
color = 'purple',
weight = ~ n.trips.ss.es/300)
}
return(map)
}
initial_table <- function(){
tab <- data.frame("Stations"=stations_lat_long$start.station.name,
"Total Trips 2019" = stations_trips_2019$n.trips[1:50],
"Total Trips 2020" = stations_trips_2020$n.trips[1:50],
check.names = FALSE)
return(tab)
}
trip_table <- function(selected_station=selected_station){
trips_2019 <- table_matrix_and_names_2019 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020, "Percentage Change" = paste0(((trips_2020 - trips_2019) / trips_2019) * 100, "%"),
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
library(leaflet)
library(tidyverse)
library(shiny)
library(leaflet)
library(maptools)
library(sp)
library(DT)
stations_trips_2020 <- read_csv("stations_trips_2020.csv")
stations_trips_2019 <- read_csv("stations_trips_2019.csv")
stations_lat_long <- read.csv('stations_lat_long.csv')
matrix_2019 = read.csv("trip.mat.2019.csv")
matrix_2020 = read.csv("trip.mat.2020.csv")
table_matrix_and_names_2019 = cbind(matrix_2019[,-1], stations_lat_long)
table_matrix_and_names_2020 = cbind(matrix_2020[,-1], stations_lat_long)
base_map <- function(year=2019){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
return(map)
}
map <- function(year=2019, selected_station){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
# Subsetting data for selected_station
data_subset <- data[which(data$start.station.name==selected_station),]
# Adding lines between selected_station and other stations
for(i in 1:nrow(data_subset)){
map = map %>%
addPolylines(data = data_subset[i,],
lat= ~ c(lat.ss, lat.es),
lng= ~ c(long.ss, long.es),
color = 'purple',
weight = ~ n.trips.ss.es/300)
}
return(map)
}
initial_table <- function(){
tab <- data.frame("Stations"=stations_lat_long$start.station.name,
"Total Trips 2019" = stations_trips_2019$n.trips[1:50],
"Total Trips 2020" = stations_trips_2020$n.trips[1:50],
check.names = FALSE)
return(tab)
}
trip_table <- function(selected_station=selected_station){
trips_2019 <- table_matrix_and_names_2019 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020, "Percentage Change" = paste0(((trips_2020 - trips_2019) / trips_2019) * 100, "%"),
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
a <- c(1,2,3)
b <- c(9,9,9)
a + b
a <- c(1,2,3)
b <- c(9,9,9)
a + b
a <- c(1,2,3)
b <- c(9,9,9)
a + b
a <- c(1,2,3)
b <- c(9,9,9)
a + b
a <- c(1,2,3)
b <- c(9,9,9)
a + b
a <- c(1,2,3)
b <- c(9,9,9)
b <- c(9,9,9)
a + b
a + b
a <- c(1,1,1)
b <- c(2,2,2)
a+b
a <- c(1,1,1)
b <- c(2,2,2)
a+b
b <- c(2,2,2)
b <- c(2,2,2)
a+b
trip_table <- function(selected_station=selected_station){
trips_2019 <- table_matrix_and_names_2019 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020, "Percentage Change" = paste0(((trips_2020 - trips_2019) / trips_2019) * 100, "%"),
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
trip_table("Pershing Square North")
trip_table <- function(selected_station=selected_station){
trips_2019 <- table_matrix_and_names_2019 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020, "Percentage Change" = paste0(round((trips_2020 - trips_2019) / trips_2019, 3) * 100, "%"),
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
trip_table("Pershing Square North")
library(leaflet)
library(tidyverse)
library(shiny)
library(leaflet)
library(maptools)
library(sp)
library(DT)
stations_trips_2020 <- read_csv("stations_trips_2020.csv")
stations_trips_2019 <- read_csv("stations_trips_2019.csv")
stations_lat_long <- read.csv('stations_lat_long.csv')
matrix_2019 = read.csv("trip.mat.2019.csv")
matrix_2020 = read.csv("trip.mat.2020.csv")
table_matrix_and_names_2019 = cbind(matrix_2019[,-1], stations_lat_long)
table_matrix_and_names_2020 = cbind(matrix_2020[,-1], stations_lat_long)
base_map <- function(year=2019){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
return(map)
}
map <- function(year=2019, selected_station){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
# Subsetting data for selected_station
data_subset <- data[which(data$start.station.name==selected_station),]
# Adding lines between selected_station and other stations
for(i in 1:nrow(data_subset)){
map = map %>%
addPolylines(data = data_subset[i,],
lat= ~ c(lat.ss, lat.es),
lng= ~ c(long.ss, long.es),
color = 'purple',
weight = ~ n.trips.ss.es/300)
}
return(map)
}
initial_table <- function(){
tab <- data.frame("Stations"=stations_lat_long$start.station.name,
"Total Trips 2019" = stations_trips_2019$n.trips[1:50],
"Total Trips 2020" = stations_trips_2020$n.trips[1:50],
check.names = FALSE)
return(tab)
}
trip_table <- function(selected_station=selected_station){
trips_2019 <- table_matrix_and_names_2019 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020,
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
library(leaflet)
library(tidyverse)
library(shiny)
library(leaflet)
library(maptools)
library(sp)
library(DT)
stations_trips_2020 <- read_csv("stations_trips_2020.csv")
stations_trips_2019 <- read_csv("stations_trips_2019.csv")
stations_lat_long <- read.csv('stations_lat_long.csv')
matrix_2019 = read.csv("trip.mat.2019.csv")
matrix_2020 = read.csv("trip.mat.2020.csv")
table_matrix_and_names_2019 = cbind(matrix_2019[,-1], stations_lat_long)
table_matrix_and_names_2020 = cbind(matrix_2020[,-1], stations_lat_long)
base_map <- function(year=2019){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
return(map)
}
map <- function(year=2019, selected_station){
if (year==2019){
data <- stations_trips_2019
}
else data <- stations_trips_2020
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(data = data, lat = ~ lat.ss, lng = ~ long.ss,
layerId = ~start.station.name, popup = ~ paste("Station Name:",
start.station.name, "<br>", "N trips:",n.trips, "<br>"),
radius = ~(n.trips/8000), color = ~ "blue")
# Subsetting data for selected_station
data_subset <- data[which(data$start.station.name==selected_station),]
# Adding lines between selected_station and other stations
for(i in 1:nrow(data_subset)){
map = map %>%
addPolylines(data = data_subset[i,],
lat= ~ c(lat.ss, lat.es),
lng= ~ c(long.ss, long.es),
color = 'purple',
weight = ~ n.trips.ss.es/300)
}
return(map)
}
initial_table <- function(){
tab <- data.frame("Stations"=stations_lat_long$start.station.name,
"Total Trips 2019" = stations_trips_2019$n.trips[1:50],
"Total Trips 2020" = stations_trips_2020$n.trips[1:50],
check.names = FALSE)
return(tab)
}
trip_table <- function(selected_station=selected_station){
trips_2019 <- table_matrix_and_names_2019 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
trips_2020 <- table_matrix_and_names_2020 %>%
filter(start.station.name == selected_station) %>%
select(-c(51,52,53,54)) %>%
t()
tab <- data.frame("Stations"=table_matrix_and_names_2019$start.station.name,
"Trips in 2019"=trips_2019, "Trips in 2020"=trips_2020,
check.names = FALSE)
tab <- datatable(tab)
return(tab)
}
runApp('~/Desktop/PHP 2560')
